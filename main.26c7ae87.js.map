{"version":3,"sources":["scripts/main.js"],"names":["PHONES_URL","DETAILS_URL","body","document","querySelector","getPhones","fetch","then","response","json","map","phone","id","getFirstReceivedDetails","phoneIDs","Promise","race","getAllSuccessfulDetails","allSettled","getThreeFastestDetails","order","all","sort","a","b","slice","resp","createFirstReceivedElement","element","createElement","classList","add","innerHTML","name","append","createAllSuccessfulElements","data","wrapper","status","value","join","createThreeFastestDetails"],"mappings":";AAAA,aAEA,IAAMA,EACF,wEACEC,EACF,oEACEC,EAAOC,SAASC,cAAc,QAEpC,SAASC,IACAC,OAAAA,MAAMN,GACVO,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAC,GAAYA,OAAAA,EAASE,IAAI,SAAAC,GAASA,OAAAA,EAAMC,OAGlD,SAASC,EAAwBC,GACxBC,OAAAA,QAAQC,KAAKF,EAASJ,IAAI,SAAAE,GACxBN,OAAAA,MAASL,GAAAA,OAAAA,GAAcW,OAAAA,EAAvB,UACJL,KAAK,SAAAC,GAAYA,OAAAA,EAASC,YAIjC,SAASQ,EAAwBH,GACxBC,OAAAA,QAAQG,WAAWJ,EAASJ,IAAI,SAAAE,GAC9BN,OAAAA,MAASL,GAAAA,OAAAA,GAAcW,OAAAA,EAAvB,UACJL,KAAK,SAAAC,GAAYA,OAAAA,EAASC,YAIjC,SAASU,EAAuBL,GAC1BM,IAAAA,EAAQ,EAELL,OAAAA,QAAQM,IAAIP,EAASJ,IAAI,SAAAE,GACvBN,OAAAA,MAASL,GAAAA,OAAAA,GAAcW,OAAAA,EAAvB,UACJL,KAAK,SAAAC,GAAa,MAAA,CACjBA,SAAAA,EACAY,MAAOA,UAGVb,KAAK,SAAAC,GAAYA,OAAAA,EAASc,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAEH,MAAQI,EAAEJ,UACrDb,KAAK,SAAAC,GAAYA,OAAAA,EAASiB,MAAM,EAAG,KACnClB,KAAK,SAAAC,GAAYO,OAAAA,QAAQM,IAAIb,EAASE,IAAI,SAAAgB,GAAQA,OAAAA,EAAKlB,SAASC,YAGrE,SAASkB,EAA2BhB,GAC5BiB,IAAAA,EAAUzB,SAAS0B,cAAc,OAEvCD,EAAQE,UAAUC,IAAI,kBAEtBH,EAAQI,UAGIrB,0EAAAA,OAAAA,EAAMsB,KAHlB,wBAMA/B,EAAKgC,OAAON,GAGd,SAASO,EAA4BC,GAC7BR,IAAAA,EAAUzB,SAAS0B,cAAc,OAEvCD,EAAQE,UAAUC,IAAI,kBAEtBH,EAAQI,UAGAI,sEAAAA,OAAAA,EAAK1B,IAAI,SAAA2B,GAAWA,MAAmB,cAAnBA,EAAQC,OACzBD,OAAAA,OAAAA,EAAQE,MAAMN,KACrB,SAAA,KAAIO,KAAK,IALb,mBAQAtC,EAAKgC,OAAON,GAGd,SAASa,EAA0BL,GAC3BR,IAAAA,EAAUzB,SAAS0B,cAAc,OAEvCD,EAAQE,UAAUC,IAAI,oBAEtBH,EAAQI,UAGAI,mEAAAA,OAAAA,EAAK1B,IAAI,SAAAC,GAAgBA,MAAAA,OAAAA,OAAAA,EAAMsB,KAAjB,WAA8BO,KAAK,IAHzD,mBAMAtC,EAAKgC,OAAON,GAGdvB,IACGE,KAAK,SAAAC,GAAYK,OAAAA,EAAwBL,KACzCD,KAAK,SAAAC,GAAYmB,OAAAA,EAA2BnB,KAE/CH,IACGE,KAAK,SAAAC,GAAYS,OAAAA,EAAwBT,KACzCD,KAAK,SAAAC,GAAY2B,OAAAA,EAA4B3B,KAEhDH,IACGE,KAAK,SAAAC,GAAYW,OAAAA,EAAuBX,KACxCD,KAAK,SAAAC,GAAYiC,OAAAA,EAA0BjC","file":"main.26c7ae87.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst PHONES_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\nconst DETAILS_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\nconst body = document.querySelector('body');\n\nfunction getPhones() {\n  return fetch(PHONES_URL)\n    .then(response => response.json())\n    .then(response => response.map(phone => phone.id));\n}\n\nfunction getFirstReceivedDetails(phoneIDs) {\n  return Promise.race(phoneIDs.map(id => {\n    return fetch(`${DETAILS_URL}${id}.json`)\n      .then(response => response.json());\n  }));\n}\n\nfunction getAllSuccessfulDetails(phoneIDs) {\n  return Promise.allSettled(phoneIDs.map(id => {\n    return fetch(`${DETAILS_URL}${id}.json`)\n      .then(response => response.json());\n  }));\n}\n\nfunction getThreeFastestDetails(phoneIDs) {\n  let order = 0;\n\n  return Promise.all(phoneIDs.map(id => {\n    return fetch(`${DETAILS_URL}${id}.json`)\n      .then(response => ({\n        response,\n        order: order++,\n      }));\n  }))\n    .then(response => response.sort((a, b) => a.order - b.order))\n    .then(response => response.slice(0, 3))\n    .then(response => Promise.all(response.map(resp => resp.response.json())));\n}\n\nfunction createFirstReceivedElement(phone) {\n  const element = document.createElement('div');\n\n  element.classList.add('first-received');\n\n  element.innerHTML = `\n    <h2 class=\"li-header\">First Received</h2>\n    <ul>\n        <li>${phone.name}</li>\n    </ul>\n  `;\n  body.append(element);\n}\n\nfunction createAllSuccessfulElements(data) {\n  const element = document.createElement('div');\n\n  element.classList.add('all-successful');\n\n  element.innerHTML = `\n    <h2 class=\"li-header\">All Successful</h2>\n    <ul>\n        ${data.map(wrapper => wrapper.status === 'fulfilled'\n    ? `<li>${wrapper.value.name}</li>`\n    : '').join('')}\n    </ul>\n  `;\n  body.append(element);\n}\n\nfunction createThreeFastestDetails(data) {\n  const element = document.createElement('div');\n\n  element.classList.add('three-successful');\n\n  element.innerHTML = `\n    <h2 class=\"li-header\">First Three</h2>\n    <ul>\n        ${data.map(phone => `<li>${phone.name}</li>`).join('')}\n    </ul>\n  `;\n  body.append(element);\n}\n\ngetPhones()\n  .then(response => getFirstReceivedDetails(response))\n  .then(response => createFirstReceivedElement(response));\n\ngetPhones()\n  .then(response => getAllSuccessfulDetails(response))\n  .then(response => createAllSuccessfulElements(response));\n\ngetPhones()\n  .then(response => getThreeFastestDetails(response))\n  .then(response => createThreeFastestDetails(response));\n"]}